<!doctype html>
<html lang="ja">

	<head>
		<meta charset="utf-8">

    <title>Scalaの型システムを学ぶ</title>

		<meta name="description" content="Scalaの型システムを学ぶ">
		<meta name="author" content="Kota Mizushima">

		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">

		<link rel="stylesheet" href="css/reveal.css">
		<link rel="stylesheet" href="css/theme/black.css" id="theme">
<style type='text/css'>     
  .reveal h1,               
  .reveal h2,               
  .reveal h3,               
  .reveal h4,               
  .reveal h5,               
  .reveal h6 {              
    text-transform: none;   
  }                         
</style>                    

		<!-- Code syntax highlighting -->
		<link rel="stylesheet" href="lib/css/zenburn.css">

		<!-- Printing and PDF exports -->
		<script>
			var link = document.createElement( 'link' );
			link.rel = 'stylesheet';
			link.type = 'text/css';
			link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
			document.getElementsByTagName( 'head' )[0].appendChild( link );
		</script>

		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>

		<div class="reveal">

			<!-- Any section element inside of this container is displayed as a slide -->
<div class='slides'>
<section data-markdown data-separator='^\n---$'><script type='text/template'>

## Scalaの型システムを学ぶ
## Understanding Scala
## 水島宏太 (株式会社ドワンゴ）

---

### 私は誰？

- Twitter ID: [@kmizu](https://twitter.com/kmizu)
- GitHub: [kmizu](https://github.com/kmizu)
- Love: Nemerle/Rust/Standard ML/Scala...
- Parsing algorithm enthuasiast

---

### Scalaの型システム（概要）

- 非常に表現力が強い
  - Javaなどと比べて強い制約を表現できる
- プリミティブ型のような、「特別扱い」される型が存在しない
  - 統一された型階層
- 全ての型のサブタイプ（Nothing）の存在
  - 正常にreturnしない関数の型を表現できる
- ローカル型推論
  - タイプ数の節約
- 高階多相
  - Haskellなどの一部言語にしか存在しない

---

### Scalaの型階層（図）

```
Any
|
|-- AnyVal(プリミティブ型の共通の親クラス)                                     ----------|
|   |
|   |-- Byte(Javaのbyte相当)
|   |-- Short(Javaのshort相当)
|   |-- Char(Javaのchar相当)
|   |-- Int(Javaのint相当)                           
|   |-- Long(Javaのlong相当)                                                                         |--- Nothing
|   |-- Float(Javaのfloat相当)
|   |-- Double(Javaのdouble相当)
|   |-- Boolean(Javaのboolean相当)
|   |-- Unit(Javaのvoid相当)
|                                                                         
|-- AnyRef(参照型の共通の親クラス。java.lang.Objectに相当)      --- Null--|
    |
    |-- String
    |-- ...
```

---

### Any：全ての型のスーパータイプ

* どんな型の値でも`Any`型の変数に代入できる
* 最小限のメソッドのみを定義
  * `==`, `!=`
  * `toString`
  * `hashCode`
  * `equals`

---

### AnyVal: 全ての値型のスーパークラス

* Javaでいうプリミティブ型をまとめたもの

### AnyRef: 全ての参照型のスーパータイプ

* Javaでいう `java.lang.Object` に相当
* 参照型の全ての値は `AnyRef` に代入できる
* 参照の等価性を判定するメソッドを定義
  * `eq`

### Nothing：全ての型のサブタイプ

---

</script></section>

      </div>
		</div>
    

		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.js"></script>

		<script>

			// Full list of configuration options available at:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				transition: 'slide', // none/fade/slide/convex/concave/zoom

				// Optional reveal.js plugins
				dependencies: [
					{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: 'plugin/zoom-js/zoom.js', async: true },
					{ src: 'plugin/notes/notes.js', async: true }
				]
			});

		</script>

	</body>
</html>
